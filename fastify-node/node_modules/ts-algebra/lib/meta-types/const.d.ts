import { A } from "ts-toolbelt";
import { If } from "../utils";
import { Never } from "./never";
export declare type ConstTypeId = "const";
export declare type Const<V extends any> = If<A.Equals<V, never>, Never, {
    type: ConstTypeId;
    value: V;
}>;
export declare type ConstType = {
    type: ConstTypeId;
    value: any;
};
export declare type ConstValue<C extends ConstType> = C["value"];
export declare type ResolveConst<T extends ConstType> = ConstValue<T>;
