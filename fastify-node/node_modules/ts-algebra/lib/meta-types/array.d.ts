import { Prettify } from "../utils";
import { Any } from "./any";
import { NeverType } from "./never";
import { Type } from "./type";
import { $Resolve } from "./resolve";
export declare type ArrayTypeId = "array";
export declare type _Array<V extends Type = Any> = _$Array<V>;
export declare type _$Array<V = Any> = {
    type: ArrayTypeId;
    values: V;
};
export declare type ArrayType = {
    type: ArrayTypeId;
    values: Type;
};
export declare type ArrayValues<A extends ArrayType> = A["values"];
export declare type ResolveArray<T extends ArrayType> = ArrayValues<T> extends NeverType ? [] : Prettify<$Resolve<ArrayValues<T>>[]>;
