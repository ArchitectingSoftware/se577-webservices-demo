import { A } from "ts-toolbelt";
import { If } from "../utils";
import { Never } from "./never";
export declare type EnumTypeId = "enum";
export declare type Enum<V extends any> = If<A.Equals<V, never>, Never, {
    type: EnumTypeId;
    values: V;
}>;
export declare type EnumType = {
    type: EnumTypeId;
    values: any;
};
export declare type EnumValues<E extends EnumType> = E["values"];
export declare type ResolveEnum<T extends EnumType> = EnumValues<T>;
